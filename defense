'''
The goal of this is to give expected points for a defense in fantasy football. I will be doing this
by simulating various elements of a game and combining the probabilities to get a final result. 
Elements listed below:

Points - scrape line and over/under, run a poisson distribution, 
convert the poisson to expected points scored and the expected points scored to FF points

Yards - scrape yds/g from offense and yd/gm from defense, normalize for home team, run a poisson distribution
convert poisson to expected points scored and expected points scores to FF points

Sacks - scrape sacks/gm offense and defense, normalize for home team, run a poisson and convert to FF points

Fumbles - assume 1/game and convert to points

Interceptions - based off of defenseive ints and QB int rate, run poisson and convert to FF points

D touchdowns - 

ST touchdowns - see ranks


'''


#creating a function to return expected fantasy points given an expected number of points given up

def points_points(expected):
  points5 = (poisson.pmf(0, expected))
  points4 = 0
  for i in range(1,7):
    points4 += (poisson.pmf(i, expected))
  points3 = 0
  for i in range(8,14):
    points3 += (poisson.pmf(i, expected))
  points1 = 0
  for i in range(15,18):
    points1 += (poisson.pmf(i, expected))
  points_neg1 = 0
  for i in range(28, 35):
    points_neg1 += (poisson.pmf(i, expected))
  points_neg3 = 0
  for i in range(35, 46):
    points_neg3 += (poisson.pmf(i, expected))
  points_neg5 = 0
  for i in range(46, 50):
    points_neg5 += (poisson.pmf(i, expected))

  return((points5*5)+(points4*4)+(points3*3)+(points1*1)+(points_neg1*-1)+(points_neg3*-3)+(points_neg5*-5))
